// Responsive breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}.";
  }
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Grid utilities
@mixin grid-center {
  display: grid;
  place-items: center;
}

@mixin grid-columns($columns, $gap: map-get($spacing, '4')) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Typography
@mixin text-style($size, $weight: 'normal', $line-height: 'normal') {
  font-size: map-get($font-sizes, $size);
  font-weight: map-get($font-weights, $weight);
  line-height: map-get($line-heights, $line-height);
}

@mixin heading($level: 1) {
  @if $level == 1 {
    @include text-style('4xl', 'bold', 'tight');
  } @else if $level == 2 {
    @include text-style('3xl', 'bold', 'tight');
  } @else if $level == 3 {
    @include text-style('2xl', 'semibold', 'snug');
  } @else if $level == 4 {
    @include text-style('xl', 'semibold', 'snug');
  } @else if $level == 5 {
    @include text-style('lg', 'medium', 'normal');
  } @else if $level == 6 {
    @include text-style('base', 'medium', 'normal');
  }
}

// Spacing utilities
@mixin padding($top: 0, $right: $top, $bottom: $top, $left: $right) {
  padding: map-get($spacing, $top) map-get($spacing, $right) map-get($spacing, $bottom) map-get($spacing, $left);
}

@mixin margin($top: 0, $right: $top, $bottom: $top, $left: $right) {
  margin: map-get($spacing, $top) map-get($spacing, $right) map-get($spacing, $bottom) map-get($spacing, $left);
}

// Border radius
@mixin rounded($size: 'base') {
  border-radius: map-get($border-radius, $size);
}

// Shadows
@mixin shadow($size: 'base') {
  box-shadow: map-get($shadows, $size);
}

// Transitions
@mixin transition($properties: all, $duration: 'normal', $easing: 'ease-in-out') {
  transition: $properties map-get($durations, $duration) map-get($easings, $easing);
}

// Focus states
@mixin focus-ring($color: var(--ring)) {
  outline: 2px solid transparent;
  outline-offset: 2px;
  
  &:focus-visible {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
}

// Hover states
@mixin hover-lift {
  @include transition(transform, 'fast');
  
  &:hover {
    transform: translateY(-1px);
  }
}

// Truncate text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Visually hidden (for screen readers)
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Theme color function
@mixin theme-colors($theme-name) {
  &[data-theme="#{$theme-name}"] {
    @content;
  }
}

// Component state variants
@mixin variant($variant) {
  &--#{$variant} {
    @content;
  }
}

// Size variants
@mixin size($size) {
  &--#{$size} {
    @content;
  }
}
