// Get spacing value
@function spacing($key) {
  @return map-get($spacing, $key);
}

// Get font size
@function font-size($key) {
  @return map-get($font-sizes, $key);
}

// Get font weight
@function font-weight($key) {
  @return map-get($font-weights, $key);
}

// Get border radius
@function radius($key) {
  @return map-get($border-radius, $key);
}

// Get shadow
@function shadow($key) {
  @return map-get($shadows, $key);
}

// Get z-index
@function z($key) {
  @return map-get($z-index, $key);
}

// Convert px to rem
@function rem($px, $base: 16px) {
  @return ($px / $base) * 1rem;
}

// Convert px to em
@function em($px, $base: 16px) {
  @return ($px / $base) * 1em;
}

// Lighten color
@function lighten-color($color, $amount: 10%) {
  @return lighten($color, $amount);
}

// Darken color
@function darken-color($color, $amount: 10%) {
  @return darken($color, $amount);
}

// Alpha transparency
@function alpha($color, $opacity: 0.5) {
  @return rgba($color, $opacity);
}

// Strip units from number
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

// Calculate contrast ratio
@function contrast-ratio($color1, $color2) {
  $l1: luminance($color1);
  $l2: luminance($color2);
  
  @if $l1 > $l2 {
    @return ($l1 + 0.05) / ($l2 + 0.05);
  } @else {
    @return ($l2 + 0.05) / ($l1 + 0.05);
  }
}

// Get luminance of color
@function luminance($color) {
  $red: red($color) / 255;
  $green: green($color) / 255;
  $blue: blue($color) / 255;
  
  $red: if($red <= 0.03928, $red / 12.92, pow(($red + 0.055) / 1.055, 2.4));
  $green: if($green <= 0.03928, $green / 12.92, pow(($green + 0.055) / 1.055, 2.4));
  $blue: if($blue <= 0.03928, $blue / 12.92, pow(($blue + 0.055) / 1.055, 2.4));
  
  @return 0.2126 * $red + 0.7152 * $green + 0.0722 * $blue;
}

// Power function
@function pow($number, $exponent) {
  $value: 1;
  
  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  } @else if $exponent < 0 {
    @for $i from 1 through -$exponent {
      $value: $value / $number;
    }
  }
  
  @return $value;
}
